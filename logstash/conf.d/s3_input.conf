#s3_input conf


# Sample Logstash configuration for creating a simple
# AWS S3 -> Logstash -> Elasticsearch pipeline.
# References:
#   https://www.elastic.co/guide/en/logstash/current/plugins-inputs-s3.html
#   https://www.elastic.co/blog/logstash-lines-inproved-resilience-in-S3-input
#   https://www.elastic.co/guide/en/logstash/current/working-with-plugins.html

input {
  s3 {
    id => "access-logs-id"
    region => "eu-west-1"
    bucket => "netpulse-poc-test-access-logs"
    interval => "10"
    additional_settings => {
      force_path_style => true
      follow_redirects => false
                }
  }
}


filter {
if [id] == "access-logs-id" {
      grok {
        patterns_dir => ["/etc/logstash/patterns"]
        match => { "message" => '%{WORD:ID} %{NOTSPACE:bucketName} \[%{NOTSPACE:datestamp} +%{INT:timezone}\] %{IPORHOST:hostName} %{NOTSPACE:requester} %{NOTSPACE:requestID} %{NOTSPACE:operation} %{NOTSPACE:key} "%{NOTSPACE:httpMethod} %{NOTSPACE:requestURI} %{NOTSPACE:protocol}" %{NOTSPACE:httpStatus} %{NOTSPACE:errorCode} %{NOTSPACE:bytesSent} %{NOTSPACE:objectSize} %{NOTSPACE:totalTime} %{NOTSPACE:turnAroundTime} %{GREEDYDATA:everythingElse}'}
        match => { "message" => '%{WORD:ID} %{NOTSPACE:bucketName} \[%{NOTSPACE:datestamp} +%{INT:timezone}\] %{IPORHOST:hostName} %{NOTSPACE:requester} %{NOTSPACE:requestID} %{NOTSPACE:operation} %{NOTSPACE:key} - %{NOTSPACE:httpStatus} %{NOTSPACE:errorCode} %{NOTSPACE:bytesSent} %{NOTSPACE:objectSize} %{NOTSPACE:totalTime} %{NOTSPACE:turnAroundTime} %{GREEDYDATA:everythingElse}'}
      }
mutate {
    convert => { "totalTime" => "integer"
                "bytesSent" => "integer"
                "objectSize" => "integer"
                "turnAroundTime" => "integer"}

	}
}
}

output {
  elasticsearch {
    hosts => ["http://10.0.0.23:9200"]
    index => "logs-%{+YYYY.MM.dd}"
    document_type => "logs"
    user => "elastic"
    password => "changeme"
}
stdout {}
}


